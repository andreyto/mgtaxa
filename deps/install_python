#!/bin/sh
## When we use --enable-shared, for some reason (in python 2.4 at least), on x86_64
## the resulting python executable gets linked with libpython.so (but not on x86_32).
## Therefore, we need to tell linker to hard-wire the path to shared library, otherwise
## libpython.so from /usr/lib64 gets loaded, and everything is broken at runtime.
## We do it this way (it should be compatible with linker options already present in LDFLAGS)
#export LDFLAGS="${LDFLAGS}"
#export LDFLAGS="-Wl,-R${INSTMACH}/lib ${LDFLAGS}"
## 'configure' options:
## If --enable-unicode=ucs4 is not present, we get 
## ImportError: /home/atovtchi/work/packages/x86_32/lib/python2.4/site-packages/numpy/core/multiarray.so: undefined symbol: PyUnicodeUCS2_FromUnicode
## on "import numpy" (after building numpy from scratch against this python). It seems to be SuSe specific and related to
## the choice between 2- and 4-byte representation of Unicode. ='ucs2' was shown not to work on SuSe 10 x86_32.

## --enable-shared is needed to build extensions that link with python static library on x86_64

## --with-cxx is needed to safely load multiple c++ extensions (it makes sure that only one instance
## of libstdc++.so is loaded by doing this when python executable is first started)

## --with-fpectl is needed if we want to catch a numeric overflow in extensions

make distclean
#./configure --prefix=$INST --exec-prefix=$INSTMACH --enable-unicode=ucs4 --enable-shared --with-cxx=/usr/local/bin/g++ --with-fpectl && \
./configure --prefix=$INSTMACH --enable-unicode=ucs4 --enable-shared --with-cxx=`which g++` --with-fpectl && \
make -j 8 && \
make install

